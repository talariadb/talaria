// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: talaria.proto

package talaria

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// IngestRequest represents an ingestion request.
type IngestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*IngestRequest_Batch
	//	*IngestRequest_Orc
	//	*IngestRequest_Csv
	//	*IngestRequest_Url
	//	*IngestRequest_Parquet
	Data isIngestRequest_Data `protobuf_oneof:"data"`
}

func (x *IngestRequest) Reset() {
	*x = IngestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestRequest) ProtoMessage() {}

func (x *IngestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestRequest.ProtoReflect.Descriptor instead.
func (*IngestRequest) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{0}
}

func (m *IngestRequest) GetData() isIngestRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *IngestRequest) GetBatch() *Batch {
	if x, ok := x.GetData().(*IngestRequest_Batch); ok {
		return x.Batch
	}
	return nil
}

func (x *IngestRequest) GetOrc() []byte {
	if x, ok := x.GetData().(*IngestRequest_Orc); ok {
		return x.Orc
	}
	return nil
}

func (x *IngestRequest) GetCsv() []byte {
	if x, ok := x.GetData().(*IngestRequest_Csv); ok {
		return x.Csv
	}
	return nil
}

func (x *IngestRequest) GetUrl() string {
	if x, ok := x.GetData().(*IngestRequest_Url); ok {
		return x.Url
	}
	return ""
}

func (x *IngestRequest) GetParquet() []byte {
	if x, ok := x.GetData().(*IngestRequest_Parquet); ok {
		return x.Parquet
	}
	return nil
}

type isIngestRequest_Data interface {
	isIngestRequest_Data()
}

type IngestRequest_Batch struct {
	Batch *Batch `protobuf:"bytes,1,opt,name=batch,proto3,oneof"` // Batch of events
}

type IngestRequest_Orc struct {
	Orc []byte `protobuf:"bytes,2,opt,name=orc,proto3,oneof"` // An orc file
}

type IngestRequest_Csv struct {
	Csv []byte `protobuf:"bytes,3,opt,name=csv,proto3,oneof"` // CSV (comma-separated) file
}

type IngestRequest_Url struct {
	Url string `protobuf:"bytes,4,opt,name=url,proto3,oneof"` // A url pointing to a file (.orc, .csv)
}

type IngestRequest_Parquet struct {
	Parquet []byte `protobuf:"bytes,5,opt,name=parquet,proto3,oneof"` // A parquet file
}

func (*IngestRequest_Batch) isIngestRequest_Data() {}

func (*IngestRequest_Orc) isIngestRequest_Data() {}

func (*IngestRequest_Csv) isIngestRequest_Data() {}

func (*IngestRequest_Url) isIngestRequest_Data() {}

func (*IngestRequest_Parquet) isIngestRequest_Data() {}

// IngestRequestWithTable  represents an ingestion request with table name specified.
type IngestWithTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables []string `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	// Types that are assignable to Data:
	//	*IngestWithTableRequest_Batch
	//	*IngestWithTableRequest_Orc
	//	*IngestWithTableRequest_Csv
	//	*IngestWithTableRequest_Url
	//	*IngestWithTableRequest_Parquet
	Data isIngestWithTableRequest_Data `protobuf_oneof:"data"`
}

func (x *IngestWithTableRequest) Reset() {
	*x = IngestWithTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestWithTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestWithTableRequest) ProtoMessage() {}

func (x *IngestWithTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestWithTableRequest.ProtoReflect.Descriptor instead.
func (*IngestWithTableRequest) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{1}
}

func (x *IngestWithTableRequest) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (m *IngestWithTableRequest) GetData() isIngestWithTableRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *IngestWithTableRequest) GetBatch() *Batch {
	if x, ok := x.GetData().(*IngestWithTableRequest_Batch); ok {
		return x.Batch
	}
	return nil
}

func (x *IngestWithTableRequest) GetOrc() []byte {
	if x, ok := x.GetData().(*IngestWithTableRequest_Orc); ok {
		return x.Orc
	}
	return nil
}

func (x *IngestWithTableRequest) GetCsv() []byte {
	if x, ok := x.GetData().(*IngestWithTableRequest_Csv); ok {
		return x.Csv
	}
	return nil
}

func (x *IngestWithTableRequest) GetUrl() string {
	if x, ok := x.GetData().(*IngestWithTableRequest_Url); ok {
		return x.Url
	}
	return ""
}

func (x *IngestWithTableRequest) GetParquet() []byte {
	if x, ok := x.GetData().(*IngestWithTableRequest_Parquet); ok {
		return x.Parquet
	}
	return nil
}

type isIngestWithTableRequest_Data interface {
	isIngestWithTableRequest_Data()
}

type IngestWithTableRequest_Batch struct {
	Batch *Batch `protobuf:"bytes,2,opt,name=batch,proto3,oneof"` // Batch of events
}

type IngestWithTableRequest_Orc struct {
	Orc []byte `protobuf:"bytes,3,opt,name=orc,proto3,oneof"` // An orc file
}

type IngestWithTableRequest_Csv struct {
	Csv []byte `protobuf:"bytes,4,opt,name=csv,proto3,oneof"` // CSV (comma-separated) file
}

type IngestWithTableRequest_Url struct {
	Url string `protobuf:"bytes,5,opt,name=url,proto3,oneof"` // A url pointing to a file (.orc, .csv)
}

type IngestWithTableRequest_Parquet struct {
	Parquet []byte `protobuf:"bytes,6,opt,name=parquet,proto3,oneof"` // A parquet file
}

func (*IngestWithTableRequest_Batch) isIngestWithTableRequest_Data() {}

func (*IngestWithTableRequest_Orc) isIngestWithTableRequest_Data() {}

func (*IngestWithTableRequest_Csv) isIngestWithTableRequest_Data() {}

func (*IngestWithTableRequest_Url) isIngestWithTableRequest_Data() {}

func (*IngestWithTableRequest_Parquet) isIngestWithTableRequest_Data() {}

// IngestResponse represents an ingestion response.
type IngestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IngestResponse) Reset() {
	*x = IngestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IngestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestResponse) ProtoMessage() {}

func (x *IngestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestResponse.ProtoReflect.Descriptor instead.
func (*IngestResponse) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{2}
}

// Batch represents an event batch. It contains a map of strings in order
// to minimize the size.
type Batch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strings map[uint32][]byte `protobuf:"bytes,1,rep,name=strings,proto3" json:"strings,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Events  []*Event          `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *Batch) Reset() {
	*x = Batch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Batch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Batch) ProtoMessage() {}

func (x *Batch) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Batch.ProtoReflect.Descriptor instead.
func (*Batch) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{3}
}

func (x *Batch) GetStrings() map[uint32][]byte {
	if x != nil {
		return x.Strings
	}
	return nil
}

func (x *Batch) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

// Event represents a single event. Name as well as value columns are
// interned strings which are present in a batch.
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value map[uint32]*Value `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{4}
}

func (x *Event) GetValue() map[uint32]*Value {
	if x != nil {
		return x.Value
	}
	return nil
}

// Value represents a value
type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*Value_Int32
	//	*Value_Int64
	//	*Value_Float64
	//	*Value_String_
	//	*Value_Bool
	//	*Value_Time
	//	*Value_Json
	Value isValue_Value `protobuf_oneof:"value"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{5}
}

func (m *Value) GetValue() isValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Value) GetInt32() int32 {
	if x, ok := x.GetValue().(*Value_Int32); ok {
		return x.Int32
	}
	return 0
}

func (x *Value) GetInt64() int64 {
	if x, ok := x.GetValue().(*Value_Int64); ok {
		return x.Int64
	}
	return 0
}

func (x *Value) GetFloat64() float64 {
	if x, ok := x.GetValue().(*Value_Float64); ok {
		return x.Float64
	}
	return 0
}

func (x *Value) GetString_() uint32 {
	if x, ok := x.GetValue().(*Value_String_); ok {
		return x.String_
	}
	return 0
}

func (x *Value) GetBool() bool {
	if x, ok := x.GetValue().(*Value_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *Value) GetTime() int64 {
	if x, ok := x.GetValue().(*Value_Time); ok {
		return x.Time
	}
	return 0
}

func (x *Value) GetJson() uint32 {
	if x, ok := x.GetValue().(*Value_Json); ok {
		return x.Json
	}
	return 0
}

type isValue_Value interface {
	isValue_Value()
}

type Value_Int32 struct {
	Int32 int32 `protobuf:"varint,1,opt,name=int32,proto3,oneof"`
}

type Value_Int64 struct {
	Int64 int64 `protobuf:"varint,2,opt,name=int64,proto3,oneof"`
}

type Value_Float64 struct {
	Float64 float64 `protobuf:"fixed64,3,opt,name=float64,proto3,oneof"`
}

type Value_String_ struct {
	String_ uint32 `protobuf:"varint,4,opt,name=string,proto3,oneof"`
}

type Value_Bool struct {
	Bool bool `protobuf:"varint,5,opt,name=bool,proto3,oneof"`
}

type Value_Time struct {
	Time int64 `protobuf:"varint,6,opt,name=time,proto3,oneof"`
}

type Value_Json struct {
	Json uint32 `protobuf:"varint,7,opt,name=json,proto3,oneof"`
}

func (*Value_Int32) isValue_Value() {}

func (*Value_Int64) isValue_Value() {}

func (*Value_Float64) isValue_Value() {}

func (*Value_String_) isValue_Value() {}

func (*Value_Bool) isValue_Value() {}

func (*Value_Time) isValue_Value() {}

func (*Value_Json) isValue_Value() {}

// DescribeRequest represents an request to list the tables and schemas.
type DescribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DescribeRequest) Reset() {
	*x = DescribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeRequest) ProtoMessage() {}

func (x *DescribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeRequest.ProtoReflect.Descriptor instead.
func (*DescribeRequest) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{6}
}

// DescribeResponse represents an response that returns tables and their schemas.
type DescribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables []*TableMeta `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"` // The set of table metadata
}

func (x *DescribeResponse) Reset() {
	*x = DescribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeResponse) ProtoMessage() {}

func (x *DescribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeResponse.ProtoReflect.Descriptor instead.
func (*DescribeResponse) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeResponse) GetTables() []*TableMeta {
	if x != nil {
		return x.Tables
	}
	return nil
}

// DescribeTableRequest represents an request to list the table columns and its metadata.
type DescribeTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DescribeTableRequest) Reset() {
	*x = DescribeTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTableRequest) ProtoMessage() {}

func (x *DescribeTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTableRequest.ProtoReflect.Descriptor instead.
func (*DescribeTableRequest) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{8}
}

func (x *DescribeTableRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// DescribeTableResponse represents an response for the given talbe.
type DescribeTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table *TableMeta `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *DescribeTableResponse) Reset() {
	*x = DescribeTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTableResponse) ProtoMessage() {}

func (x *DescribeTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTableResponse.ProtoReflect.Descriptor instead.
func (*DescribeTableResponse) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{9}
}

func (x *DescribeTableResponse) GetTable() *TableMeta {
	if x != nil {
		return x.Table
	}
	return nil
}

//TableMeta represents table metadata
type TableMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema  string        `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`   // The schema for the table
	Table   string        `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`     // The table name
	Columns []*ColumnMeta `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"` // The list of columns of the table
	Hashby  string        `protobuf:"bytes,4,opt,name=hashby,proto3" json:"hashby,omitempty"`   // The column name used for partitioning.
	Sortby  string        `protobuf:"bytes,5,opt,name=sortby,proto3" json:"sortby,omitempty"`   // The column name used for sorting.
}

func (x *TableMeta) Reset() {
	*x = TableMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableMeta) ProtoMessage() {}

func (x *TableMeta) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableMeta.ProtoReflect.Descriptor instead.
func (*TableMeta) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{10}
}

func (x *TableMeta) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *TableMeta) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *TableMeta) GetColumns() []*ColumnMeta {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *TableMeta) GetHashby() string {
	if x != nil {
		return x.Hashby
	}
	return ""
}

func (x *TableMeta) GetSortby() string {
	if x != nil {
		return x.Sortby
	}
	return ""
}

// ColumnMeta represents a column metadata
type ColumnMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`       // The name of the column (eg. tsi)
	Type    string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`       // The SQL type of the column (eg. varchar)
	Comment string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"` // The optional comment for the column
}

func (x *ColumnMeta) Reset() {
	*x = ColumnMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnMeta) ProtoMessage() {}

func (x *ColumnMeta) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnMeta.ProtoReflect.Descriptor instead.
func (*ColumnMeta) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{11}
}

func (x *ColumnMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ColumnMeta) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ColumnMeta) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

// GetNodesRequest represents an request to get cluster nodes info.
type GetNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNodesRequest) Reset() {
	*x = GetNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesRequest) ProtoMessage() {}

func (x *GetNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesRequest.ProtoReflect.Descriptor instead.
func (*GetNodesRequest) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{12}
}

// GetNodesResponse represents response for talaria cluster nodes.
type GetNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*Endpoint `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *GetNodesResponse) Reset() {
	*x = GetNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesResponse) ProtoMessage() {}

func (x *GetNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesResponse.ProtoReflect.Descriptor instead.
func (*GetNodesResponse) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{13}
}

func (x *GetNodesResponse) GetNodes() []*Endpoint {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// GetSplitsRequest represents an request to get the splits for a table.
type GetSplitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema    string   `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`        // The schema for the table
	Table     string   `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`          // The table name
	Columns   []string `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"`      // The set of desired columns
	Filters   []string `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty"`      // The set of filters
	MaxSplits int32    `protobuf:"varint,5,opt,name=maxSplits,proto3" json:"maxSplits,omitempty"` // The maximum splits that should be returned.
	NextToken []byte   `protobuf:"bytes,6,opt,name=nextToken,proto3" json:"nextToken,omitempty"`  // The cursor representing the next token
}

func (x *GetSplitsRequest) Reset() {
	*x = GetSplitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSplitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSplitsRequest) ProtoMessage() {}

func (x *GetSplitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSplitsRequest.ProtoReflect.Descriptor instead.
func (*GetSplitsRequest) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{14}
}

func (x *GetSplitsRequest) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *GetSplitsRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *GetSplitsRequest) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *GetSplitsRequest) GetFilters() []string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *GetSplitsRequest) GetMaxSplits() int32 {
	if x != nil {
		return x.MaxSplits
	}
	return 0
}

func (x *GetSplitsRequest) GetNextToken() []byte {
	if x != nil {
		return x.NextToken
	}
	return nil
}

// GetSplitsResponse represents an response containing the splits for a table.
type GetSplitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Splits    []*Split `protobuf:"bytes,1,rep,name=splits,proto3" json:"splits,omitempty"`       // The list of splits that can be queried
	NextToken []byte   `protobuf:"bytes,2,opt,name=nextToken,proto3" json:"nextToken,omitempty"` // The cursor representing the next token
}

func (x *GetSplitsResponse) Reset() {
	*x = GetSplitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSplitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSplitsResponse) ProtoMessage() {}

func (x *GetSplitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSplitsResponse.ProtoReflect.Descriptor instead.
func (*GetSplitsResponse) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{15}
}

func (x *GetSplitsResponse) GetSplits() []*Split {
	if x != nil {
		return x.Splits
	}
	return nil
}

func (x *GetSplitsResponse) GetNextToken() []byte {
	if x != nil {
		return x.NextToken
	}
	return nil
}

// Endpoint represents a host/port combination
type Endpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`  // The hostname for the endpoint
	Port int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"` // The port for the endpoint
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{16}
}

func (x *Endpoint) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Endpoint) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// Split represents the split information
type Split struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SplitID []byte      `protobuf:"bytes,1,opt,name=splitID,proto3" json:"splitID,omitempty"` // The split identifier
	Hosts   []*Endpoint `protobuf:"bytes,2,rep,name=hosts,proto3" json:"hosts,omitempty"`     // The set of hosts
}

func (x *Split) Reset() {
	*x = Split{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Split) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Split) ProtoMessage() {}

func (x *Split) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Split.ProtoReflect.Descriptor instead.
func (*Split) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{17}
}

func (x *Split) GetSplitID() []byte {
	if x != nil {
		return x.SplitID
	}
	return nil
}

func (x *Split) GetHosts() []*Endpoint {
	if x != nil {
		return x.Hosts
	}
	return nil
}

// GetRowsRequest represents an request to get the rows for a split.
type GetRowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SplitID   []byte   `protobuf:"bytes,1,opt,name=splitID,proto3" json:"splitID,omitempty"`     // The split identifier
	Columns   []string `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`     // The set of desired columns
	MaxBytes  int64    `protobuf:"varint,3,opt,name=maxBytes,proto3" json:"maxBytes,omitempty"`  // The maximum bytes that should be returned.
	NextToken []byte   `protobuf:"bytes,4,opt,name=nextToken,proto3" json:"nextToken,omitempty"` // The cursor representing the next token
}

func (x *GetRowsRequest) Reset() {
	*x = GetRowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRowsRequest) ProtoMessage() {}

func (x *GetRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRowsRequest.ProtoReflect.Descriptor instead.
func (*GetRowsRequest) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{18}
}

func (x *GetRowsRequest) GetSplitID() []byte {
	if x != nil {
		return x.SplitID
	}
	return nil
}

func (x *GetRowsRequest) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *GetRowsRequest) GetMaxBytes() int64 {
	if x != nil {
		return x.MaxBytes
	}
	return 0
}

func (x *GetRowsRequest) GetNextToken() []byte {
	if x != nil {
		return x.NextToken
	}
	return nil
}

// GetRowsResponse represents a response that returns the rows.
type GetRowsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns   []*Column `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`     // The set of columnar data
	RowCount  int32     `protobuf:"varint,2,opt,name=rowCount,proto3" json:"rowCount,omitempty"`  // The number of rows returned
	NextToken []byte    `protobuf:"bytes,3,opt,name=nextToken,proto3" json:"nextToken,omitempty"` // The cursor representing the next token
}

func (x *GetRowsResponse) Reset() {
	*x = GetRowsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRowsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRowsResponse) ProtoMessage() {}

func (x *GetRowsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRowsResponse.ProtoReflect.Descriptor instead.
func (*GetRowsResponse) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{19}
}

func (x *GetRowsResponse) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *GetRowsResponse) GetRowCount() int32 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

func (x *GetRowsResponse) GetNextToken() []byte {
	if x != nil {
		return x.NextToken
	}
	return nil
}

// Column represents a column.
type Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*Column_Int32
	//	*Column_Int64
	//	*Column_Float64
	//	*Column_String_
	//	*Column_Bool
	//	*Column_Time
	//	*Column_Json
	Value isColumn_Value `protobuf_oneof:"value"`
}

func (x *Column) Reset() {
	*x = Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{20}
}

func (m *Column) GetValue() isColumn_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Column) GetInt32() *ColumnOfInt32 {
	if x, ok := x.GetValue().(*Column_Int32); ok {
		return x.Int32
	}
	return nil
}

func (x *Column) GetInt64() *ColumnOfInt64 {
	if x, ok := x.GetValue().(*Column_Int64); ok {
		return x.Int64
	}
	return nil
}

func (x *Column) GetFloat64() *ColumnOfFloat64 {
	if x, ok := x.GetValue().(*Column_Float64); ok {
		return x.Float64
	}
	return nil
}

func (x *Column) GetString_() *ColumnOfString {
	if x, ok := x.GetValue().(*Column_String_); ok {
		return x.String_
	}
	return nil
}

func (x *Column) GetBool() *ColumnOfBools {
	if x, ok := x.GetValue().(*Column_Bool); ok {
		return x.Bool
	}
	return nil
}

func (x *Column) GetTime() *ColumnOfInt64 {
	if x, ok := x.GetValue().(*Column_Time); ok {
		return x.Time
	}
	return nil
}

func (x *Column) GetJson() *ColumnOfString {
	if x, ok := x.GetValue().(*Column_Json); ok {
		return x.Json
	}
	return nil
}

type isColumn_Value interface {
	isColumn_Value()
}

type Column_Int32 struct {
	Int32 *ColumnOfInt32 `protobuf:"bytes,1,opt,name=int32,proto3,oneof"`
}

type Column_Int64 struct {
	Int64 *ColumnOfInt64 `protobuf:"bytes,2,opt,name=int64,proto3,oneof"`
}

type Column_Float64 struct {
	Float64 *ColumnOfFloat64 `protobuf:"bytes,3,opt,name=float64,proto3,oneof"`
}

type Column_String_ struct {
	String_ *ColumnOfString `protobuf:"bytes,4,opt,name=string,proto3,oneof"`
}

type Column_Bool struct {
	Bool *ColumnOfBools `protobuf:"bytes,5,opt,name=bool,proto3,oneof"`
}

type Column_Time struct {
	Time *ColumnOfInt64 `protobuf:"bytes,6,opt,name=time,proto3,oneof"`
}

type Column_Json struct {
	Json *ColumnOfString `protobuf:"bytes,7,opt,name=json,proto3,oneof"`
}

func (*Column_Int32) isColumn_Value() {}

func (*Column_Int64) isColumn_Value() {}

func (*Column_Float64) isColumn_Value() {}

func (*Column_String_) isColumn_Value() {}

func (*Column_Bool) isColumn_Value() {}

func (*Column_Time) isColumn_Value() {}

func (*Column_Json) isColumn_Value() {}

// Column containing Int32 values
type ColumnOfInt32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nulls []bool  `protobuf:"varint,1,rep,packed,name=nulls,proto3" json:"nulls,omitempty"` // Determines if a value for a corresponding row is null.
	Ints  []int32 `protobuf:"varint,2,rep,packed,name=ints,proto3" json:"ints,omitempty"`   // Values for each row. If row is null then value is ignored.
}

func (x *ColumnOfInt32) Reset() {
	*x = ColumnOfInt32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnOfInt32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnOfInt32) ProtoMessage() {}

func (x *ColumnOfInt32) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnOfInt32.ProtoReflect.Descriptor instead.
func (*ColumnOfInt32) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{21}
}

func (x *ColumnOfInt32) GetNulls() []bool {
	if x != nil {
		return x.Nulls
	}
	return nil
}

func (x *ColumnOfInt32) GetInts() []int32 {
	if x != nil {
		return x.Ints
	}
	return nil
}

// Column containing Int64 values
type ColumnOfInt64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nulls []bool  `protobuf:"varint,1,rep,packed,name=nulls,proto3" json:"nulls,omitempty"` // Determines if a value for a corresponding row is null.
	Longs []int64 `protobuf:"varint,2,rep,packed,name=longs,proto3" json:"longs,omitempty"` // Values for each row. If row is null then value is ignored.
}

func (x *ColumnOfInt64) Reset() {
	*x = ColumnOfInt64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnOfInt64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnOfInt64) ProtoMessage() {}

func (x *ColumnOfInt64) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnOfInt64.ProtoReflect.Descriptor instead.
func (*ColumnOfInt64) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{22}
}

func (x *ColumnOfInt64) GetNulls() []bool {
	if x != nil {
		return x.Nulls
	}
	return nil
}

func (x *ColumnOfInt64) GetLongs() []int64 {
	if x != nil {
		return x.Longs
	}
	return nil
}

// Column containing Float64 values
type ColumnOfFloat64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nulls   []bool    `protobuf:"varint,1,rep,packed,name=nulls,proto3" json:"nulls,omitempty"`      // Determines if a value for a corresponding row is null.
	Doubles []float64 `protobuf:"fixed64,2,rep,packed,name=doubles,proto3" json:"doubles,omitempty"` // Values for each row. If row is null then value is ignored.
}

func (x *ColumnOfFloat64) Reset() {
	*x = ColumnOfFloat64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnOfFloat64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnOfFloat64) ProtoMessage() {}

func (x *ColumnOfFloat64) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnOfFloat64.ProtoReflect.Descriptor instead.
func (*ColumnOfFloat64) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{23}
}

func (x *ColumnOfFloat64) GetNulls() []bool {
	if x != nil {
		return x.Nulls
	}
	return nil
}

func (x *ColumnOfFloat64) GetDoubles() []float64 {
	if x != nil {
		return x.Doubles
	}
	return nil
}

// Column containing Boolean values
type ColumnOfBools struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nulls []bool `protobuf:"varint,1,rep,packed,name=nulls,proto3" json:"nulls,omitempty"` // Determines if a value for a corresponding row is null.
	Bools []bool `protobuf:"varint,2,rep,packed,name=bools,proto3" json:"bools,omitempty"` // Values for each row. If row is null then value is ignored.
}

func (x *ColumnOfBools) Reset() {
	*x = ColumnOfBools{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnOfBools) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnOfBools) ProtoMessage() {}

func (x *ColumnOfBools) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnOfBools.ProtoReflect.Descriptor instead.
func (*ColumnOfBools) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{24}
}

func (x *ColumnOfBools) GetNulls() []bool {
	if x != nil {
		return x.Nulls
	}
	return nil
}

func (x *ColumnOfBools) GetBools() []bool {
	if x != nil {
		return x.Bools
	}
	return nil
}

// Column containing String values
type ColumnOfString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nulls []bool  `protobuf:"varint,1,rep,packed,name=nulls,proto3" json:"nulls,omitempty"` // Determines if a value for a corresponding row is null.
	Sizes []int32 `protobuf:"varint,2,rep,packed,name=sizes,proto3" json:"sizes,omitempty"` // Contains the length in bytes for the corresponding element.
	Bytes []byte  `protobuf:"bytes,3,opt,name=bytes,proto3" json:"bytes,omitempty"`         // The UTF-8 encoded byte values.
}

func (x *ColumnOfString) Reset() {
	*x = ColumnOfString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talaria_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnOfString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnOfString) ProtoMessage() {}

func (x *ColumnOfString) ProtoReflect() protoreflect.Message {
	mi := &file_talaria_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnOfString.ProtoReflect.Descriptor instead.
func (*ColumnOfString) Descriptor() ([]byte, []int) {
	return file_talaria_proto_rawDescGZIP(), []int{25}
}

func (x *ColumnOfString) GetNulls() []bool {
	if x != nil {
		return x.Nulls
	}
	return nil
}

func (x *ColumnOfString) GetSizes() []int32 {
	if x != nil {
		return x.Sizes
	}
	return nil
}

func (x *ColumnOfString) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

var File_talaria_proto protoreflect.FileDescriptor

var file_talaria_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x22, 0x97, 0x01, 0x0a, 0x0d, 0x49, 0x6e, 0x67,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x61, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x05, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x12, 0x0a, 0x03, 0x6f, 0x72, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x03, 0x6f, 0x72, 0x63, 0x12, 0x12, 0x0a, 0x03, 0x63, 0x73, 0x76, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x03, 0x63, 0x73, 0x76, 0x12, 0x12, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a,
	0x0a, 0x07, 0x70, 0x61, 0x72, 0x71, 0x75, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x07, 0x70, 0x61, 0x72, 0x71, 0x75, 0x65, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xb8, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x05, 0x62, 0x61, 0x74, 0x63, 0x68, 0x12, 0x12, 0x0a,
	0x03, 0x6f, 0x72, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x72,
	0x63, 0x12, 0x12, 0x0a, 0x03, 0x63, 0x73, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x03, 0x63, 0x73, 0x76, 0x12, 0x12, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x07, 0x70, 0x61, 0x72,
	0x71, 0x75, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61,
	0x72, 0x71, 0x75, 0x65, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x10, 0x0a,
	0x0e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xa2, 0x01, 0x0a, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x61, 0x6c,
	0x61, 0x72, 0x69, 0x61, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x26, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x82, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x48, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb8, 0x01, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x05, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x12,
	0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f, 0x6f,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12,
	0x14, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x61,
	0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x2a, 0x0a, 0x14, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x41, 0x0a, 0x15, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x61,
	0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x68, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x68, 0x61, 0x73, 0x68, 0x62, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x72,
	0x74, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x62,
	0x79, 0x22, 0x4e, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x22, 0xb0, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78,
	0x53, 0x70, 0x6c, 0x69, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x59, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x70, 0x6c,
	0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x61, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x06, 0x73, 0x70, 0x6c, 0x69, 0x74,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x32, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x22, 0x4a, 0x0a, 0x05, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x70, 0x6c, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73,
	0x70, 0x6c, 0x69, 0x74, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x22,
	0x7e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x76, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x72, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65, 0x78,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6e, 0x65,
	0x78, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xe5, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x34, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x4f, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x48, 0x00, 0x52,
	0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4f, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x62,
	0x6f, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4f, 0x66, 0x42, 0x6f, 0x6f, 0x6c,
	0x73, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x48,
	0x00, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4f, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x39, 0x0a, 0x0d, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x75, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52,
	0x05, 0x6e, 0x75, 0x6c, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x3b, 0x0a, 0x0d, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x4f, 0x66, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x75, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x05, 0x6e, 0x75, 0x6c, 0x6c,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x22, 0x41, 0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x4f, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x75,
	0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x05, 0x6e, 0x75, 0x6c, 0x6c, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x07, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x3b, 0x0a, 0x0d, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x4f, 0x66, 0x42, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x75, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x05, 0x6e, 0x75, 0x6c, 0x6c,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x08,
	0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x73, 0x22, 0x52, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x4f, 0x66, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x75, 0x6c,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x05, 0x6e, 0x75, 0x6c, 0x6c, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x69, 0x7a, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x69, 0x7a, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x32, 0x95, 0x01, 0x0a, 0x07,
	0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x49, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x49, 0x6e, 0x67, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x74, 0x61, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69,
	0x61, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x2e, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x32, 0xe5, 0x02, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x41, 0x0a,
	0x08, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x18, 0x2e, 0x74, 0x61, 0x6c, 0x61,
	0x72, 0x69, 0x61, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x0d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x1d, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x18,
	0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72,
	0x69, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6c, 0x69,
	0x74, 0x73, 0x12, 0x19, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x70, 0x6c, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x17, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x77,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x50, 0x0a, 0x12, 0x63,
	0x6f, 0x6d, 0x2e, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x42, 0x0d, 0x54, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x50, 0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b,
	0x65, 0x6c, 0x69, 0x6e, 0x64, 0x61, 0x72, 0x2f, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x74, 0x61, 0x6c, 0x61, 0x72, 0x69, 0x61, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_talaria_proto_rawDescOnce sync.Once
	file_talaria_proto_rawDescData = file_talaria_proto_rawDesc
)

func file_talaria_proto_rawDescGZIP() []byte {
	file_talaria_proto_rawDescOnce.Do(func() {
		file_talaria_proto_rawDescData = protoimpl.X.CompressGZIP(file_talaria_proto_rawDescData)
	})
	return file_talaria_proto_rawDescData
}

var file_talaria_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_talaria_proto_goTypes = []interface{}{
	(*IngestRequest)(nil),          // 0: talaria.IngestRequest
	(*IngestWithTableRequest)(nil), // 1: talaria.IngestWithTableRequest
	(*IngestResponse)(nil),         // 2: talaria.IngestResponse
	(*Batch)(nil),                  // 3: talaria.Batch
	(*Event)(nil),                  // 4: talaria.Event
	(*Value)(nil),                  // 5: talaria.Value
	(*DescribeRequest)(nil),        // 6: talaria.DescribeRequest
	(*DescribeResponse)(nil),       // 7: talaria.DescribeResponse
	(*DescribeTableRequest)(nil),   // 8: talaria.DescribeTableRequest
	(*DescribeTableResponse)(nil),  // 9: talaria.DescribeTableResponse
	(*TableMeta)(nil),              // 10: talaria.TableMeta
	(*ColumnMeta)(nil),             // 11: talaria.ColumnMeta
	(*GetNodesRequest)(nil),        // 12: talaria.GetNodesRequest
	(*GetNodesResponse)(nil),       // 13: talaria.GetNodesResponse
	(*GetSplitsRequest)(nil),       // 14: talaria.GetSplitsRequest
	(*GetSplitsResponse)(nil),      // 15: talaria.GetSplitsResponse
	(*Endpoint)(nil),               // 16: talaria.Endpoint
	(*Split)(nil),                  // 17: talaria.Split
	(*GetRowsRequest)(nil),         // 18: talaria.GetRowsRequest
	(*GetRowsResponse)(nil),        // 19: talaria.GetRowsResponse
	(*Column)(nil),                 // 20: talaria.Column
	(*ColumnOfInt32)(nil),          // 21: talaria.ColumnOfInt32
	(*ColumnOfInt64)(nil),          // 22: talaria.ColumnOfInt64
	(*ColumnOfFloat64)(nil),        // 23: talaria.ColumnOfFloat64
	(*ColumnOfBools)(nil),          // 24: talaria.ColumnOfBools
	(*ColumnOfString)(nil),         // 25: talaria.ColumnOfString
	nil,                            // 26: talaria.Batch.StringsEntry
	nil,                            // 27: talaria.Event.ValueEntry
}
var file_talaria_proto_depIdxs = []int32{
	3,  // 0: talaria.IngestRequest.batch:type_name -> talaria.Batch
	3,  // 1: talaria.IngestWithTableRequest.batch:type_name -> talaria.Batch
	26, // 2: talaria.Batch.strings:type_name -> talaria.Batch.StringsEntry
	4,  // 3: talaria.Batch.events:type_name -> talaria.Event
	27, // 4: talaria.Event.value:type_name -> talaria.Event.ValueEntry
	10, // 5: talaria.DescribeResponse.tables:type_name -> talaria.TableMeta
	10, // 6: talaria.DescribeTableResponse.table:type_name -> talaria.TableMeta
	11, // 7: talaria.TableMeta.columns:type_name -> talaria.ColumnMeta
	16, // 8: talaria.GetNodesResponse.nodes:type_name -> talaria.Endpoint
	17, // 9: talaria.GetSplitsResponse.splits:type_name -> talaria.Split
	16, // 10: talaria.Split.hosts:type_name -> talaria.Endpoint
	20, // 11: talaria.GetRowsResponse.columns:type_name -> talaria.Column
	21, // 12: talaria.Column.int32:type_name -> talaria.ColumnOfInt32
	22, // 13: talaria.Column.int64:type_name -> talaria.ColumnOfInt64
	23, // 14: talaria.Column.float64:type_name -> talaria.ColumnOfFloat64
	25, // 15: talaria.Column.string:type_name -> talaria.ColumnOfString
	24, // 16: talaria.Column.bool:type_name -> talaria.ColumnOfBools
	22, // 17: talaria.Column.time:type_name -> talaria.ColumnOfInt64
	25, // 18: talaria.Column.json:type_name -> talaria.ColumnOfString
	5,  // 19: talaria.Event.ValueEntry.value:type_name -> talaria.Value
	0,  // 20: talaria.Ingress.Ingest:input_type -> talaria.IngestRequest
	1,  // 21: talaria.Ingress.IngestWithTable:input_type -> talaria.IngestWithTableRequest
	6,  // 22: talaria.Query.Describe:input_type -> talaria.DescribeRequest
	8,  // 23: talaria.Query.DescribeTable:input_type -> talaria.DescribeTableRequest
	12, // 24: talaria.Query.GetNodes:input_type -> talaria.GetNodesRequest
	14, // 25: talaria.Query.GetSplits:input_type -> talaria.GetSplitsRequest
	18, // 26: talaria.Query.GetRows:input_type -> talaria.GetRowsRequest
	2,  // 27: talaria.Ingress.Ingest:output_type -> talaria.IngestResponse
	2,  // 28: talaria.Ingress.IngestWithTable:output_type -> talaria.IngestResponse
	7,  // 29: talaria.Query.Describe:output_type -> talaria.DescribeResponse
	9,  // 30: talaria.Query.DescribeTable:output_type -> talaria.DescribeTableResponse
	13, // 31: talaria.Query.GetNodes:output_type -> talaria.GetNodesResponse
	15, // 32: talaria.Query.GetSplits:output_type -> talaria.GetSplitsResponse
	19, // 33: talaria.Query.GetRows:output_type -> talaria.GetRowsResponse
	27, // [27:34] is the sub-list for method output_type
	20, // [20:27] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_talaria_proto_init() }
func file_talaria_proto_init() {
	if File_talaria_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_talaria_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestWithTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IngestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Batch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSplitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSplitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Endpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Split); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRowsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnOfInt32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnOfInt64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnOfFloat64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnOfBools); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talaria_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnOfString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_talaria_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*IngestRequest_Batch)(nil),
		(*IngestRequest_Orc)(nil),
		(*IngestRequest_Csv)(nil),
		(*IngestRequest_Url)(nil),
		(*IngestRequest_Parquet)(nil),
	}
	file_talaria_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*IngestWithTableRequest_Batch)(nil),
		(*IngestWithTableRequest_Orc)(nil),
		(*IngestWithTableRequest_Csv)(nil),
		(*IngestWithTableRequest_Url)(nil),
		(*IngestWithTableRequest_Parquet)(nil),
	}
	file_talaria_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Value_Int32)(nil),
		(*Value_Int64)(nil),
		(*Value_Float64)(nil),
		(*Value_String_)(nil),
		(*Value_Bool)(nil),
		(*Value_Time)(nil),
		(*Value_Json)(nil),
	}
	file_talaria_proto_msgTypes[20].OneofWrappers = []interface{}{
		(*Column_Int32)(nil),
		(*Column_Int64)(nil),
		(*Column_Float64)(nil),
		(*Column_String_)(nil),
		(*Column_Bool)(nil),
		(*Column_Time)(nil),
		(*Column_Json)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_talaria_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_talaria_proto_goTypes,
		DependencyIndexes: file_talaria_proto_depIdxs,
		MessageInfos:      file_talaria_proto_msgTypes,
	}.Build()
	File_talaria_proto = out.File
	file_talaria_proto_rawDesc = nil
	file_talaria_proto_goTypes = nil
	file_talaria_proto_depIdxs = nil
}
